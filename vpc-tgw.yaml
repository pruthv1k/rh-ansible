tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint creates a VPC in AWS using Terraform and adds a Transit Gateway attachment

imports:
  - http://cloudify.co/spec/cloudify/6.3.1/types.yaml
  - plugin:cloudify-terraform-plugin

inputs:

  region:
    type: string
    description: Name of the AWS region to deploy VPC into
    display_label: Region Name
    default: us-west-1
    constraints:
      - valid_values:
        - us-east-1
        - us-west-1
        - ca-central-1
        - eu-west-1

  vpc_name:
    type: string
    description: Name of the VPC
    display_label: VPC Name
    default: example-vpc

  vpc_cidr:
    type: string
    description: CIDR address for the VPC
    display_label: VPC CIDR
    default: 

  subnet_count:
    type: string
    description: List of private subnets to create within the VPC
    display_label: Private Subnets
    constraints:
      - valid_values:
        - 1
        - 2
        - 3
        - 4

  enable_nat_gateway:
    type: boolean
    description: Whether or not to enable a NAT gateway for the private subnets
    display_label: Enable NAT Gateway
    default: false

  enable_vpn_gateway:
    type: boolean
    description: Whether or not to enable a VPN gateway
    display_label: Enable VPN Gateway
    default: false

  transit_gateway_id:
    type: string
    description: ID of the transit gateway to attach the VPC to
    display_label: Transit Gateway ID

  destination_cidr:
    type: string
    description: Destination CIDR address to route
    display_label: Destination CIDR
    default: 

node_templates:

  terraform:
    type: cloudify.nodes.terraform
    properties:
      resource_config:
        installation_source: https://releases.hashicorp.com/terraform/1.1.7/terraform_1.1.7_linux_amd64.zip
    
  vpc:
    type: cloudify.nodes.terraform.Module
    properties:
      resource_config:
        source:
          location: vpc/module.zip
        variables:
          region: { get_input: region }
          vpc_name: { get_input: vpc_name }
          vpc_cidr: { get_input: vpc_cidr }
          subnet_count: { get_input: subnet_count }
          enable_nat_gateway: { get_input: enable_nat_gateway }
          enable_vpn_gateway: { get_input: enable_vpn_gateway }
    relationships:
      - target: terraform
        type: cloudify.terraform.relationships.run_on_host

  tgw_attachment:
    type: cloudify.nodes.terraform.Module
    properties:
      resource_config:
        source:
          location: tgw-attachment/module.zip
        variables:
          region: { get_input: region }
          transit_gateway_id: { get_input: transit_gateway_id }
          vpc_id: { get_attribute: [ vpc, outputs, vpc_id, value ] }
          subnet_ids: { get_attribute: [ vpc, outputs, private_subnets, value ] }
          route_table_ids: { get_attribute: [ vpc, outputs, private_route_table_ids, value ] }
          destination_cidr: { get_input: destination_cidr }
    relationships:
      - target: terraform
        type: cloudify.terraform.relationships.run_on_host
      - target: vpc
        type: cloudify.relationships.contained_in

capabilities:
  vpc_id:
    value: { get_attributes_list: [ vpc, outputs, vpc_id, value ] }


  private_subnets:
    value: { get_attributes_list: [ vpc, outputs, private_subnets, value ] }

  private_route_tables:
    value: { get_attributes_list: [ vpc, outputs, private_route_table_ids, value ] }
  
